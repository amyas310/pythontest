import streamlit as st
from collections import Counter
import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
from io import BytesIO

# 解决中文乱码问题
plt.rcParams['font.sans-serif'] = ['SimHei']  # 设置中文字体
plt.rcParams['axes.unicode_minus'] = False  # 解决负号显示问题

# 数字五行属性
DIGIT_TO_ELEMENT = {
    '1': '水', '2': '土', '3': '木', '4': '木',
    '5': '土', '6': '金', '7': '金', '8': '土', '9': '火', '0': '土'
}

# 数字性格特征
DIGIT_PERSONALITY = {
    '1': "有主见、自我、想法多，喜欢控制，性欲强，自以为是",
    '2': "内敛、保守、不喜欢表达，踏实，做任何事情都有两手准备，容易郁闷，注意脾胃功能",
    '3': "行动力强，性子急，勤快，做事效率高;火气大，情绪不好，急躁，适合做销售型工作",
    '4': "考虑多，学习力强，想得多做得少，犹豫徘徊，谨慎多疑，变数大",
    '5': "太极点、变化、隐藏、不确定、变数、起伏、不稳定、突发等",
    '6': "领导力强，固执，偏执，韧性强，霸道，人际关系差",
    '7': "口才好，喜欢说话，表达能力强，喜欢挑毛病，说服力强",
    '8': "勤奋，责任心强，稳重踏实，有点呆板，不知变通，保守",
    '9': "好动，热情，积极，火气大，情绪不好，效率高，胆子大",
    '0': "太极点、变化、隐藏、不确定、变数、起伏、不稳定、突发等",
}

# 八星定义 (吉星和凶星)
STAR_GROUPS = {
    # 四吉星
    '天医': ['13', '31', '68', '86', '49', '94', '27', '72'],
    '延年': ['19', '91', '78', '87', '34', '43', '26', '62'],
    '生气': ['14', '41', '67', '76', '39', '93', '28', '82'],
    '伏位': ['11', '22', '88', '99', '66', '77', '33', '44'],
    # 四凶星
    '绝命': ['12', '21', '69', '96', '48', '84', '37', '73'],
    '祸害': ['17', '71', '89', '98', '46', '64', '23', '32'],
    '五鬼': ['18', '81', '79', '97', '36', '63', '24', '42'],
    '六煞': ['16', '61', '47', '74', '38', '83', '29', '92']
}

# 在STAR_GROUPS后添加能量等级定义
STAR_ENERGY_LEVELS = {
    '天医': {
        4: ['13', '31'],  # 4级能量
        3: ['68', '86'],  # 3级能量
        2: ['49', '94'],  # 2级能量
        1: ['27', '72']  # 1级能量
    },
    '延年': {
        4: ['19', '91'],
        3: ['78', '87'],
        2: ['34', '43'],
        1: ['26', '62']
    },
    '生气': {
        4: ['14', '41'],
        3: ['67', '76'],
        2: ['39', '93'],
        1: ['28', '82']
    },
    '伏位': {
        4: ['11', '22'],
        3: ['88', '99'],
        2: ['66', '77'],
        1: ['33', '44']
    },
    '绝命': {
        4: ['12', '21'],
        3: ['69', '96'],
        2: ['48', '84'],
        1: ['37', '73']
    },
    '祸害': {
        4: ['17', '71'],
        3: ['89', '98'],
        2: ['46', '64'],
        1: ['23', '32']
    },
    '五鬼': {
        4: ['18', '81'],
        3: ['79', '97'],
        2: ['36', '63'],
        1: ['24', '42']
    },
    '六煞': {
        4: ['16', '61'],
        3: ['47', '74'],
        2: ['38', '83'],
        1: ['29', '92']
    }
}

# 八星含义 (按分析逻辑2)
STAR_MEANINGS = {
    '天医': {
        '性格': "聪明、善良、心胸开阔、好帮助人、单纯、无心机、易被骗",
        '财运': "钱财代名词，正财、偏财、横财等八方财运，但花钱大方",
        '事业': "可成大事，业绩好，喜欢宗教命理，第六感强",
        '婚姻': "正桃花的代名词，容易碰到理想对象，感情恩爱、甜蜜",
        '健康': "血压、血液及眼耳鼻问题",
        '贵人': "背景雄厚的人脉，如长辈或朋友",
        '特殊': "天上的神医，守护神，福报，开智慧。"
    },
    '延年': {
        '性格': "责任心强，敢于担当，大男子主义、强势、固执、认死理、较自我",
        '财运': "辛苦赚钱、比较守财、喜欢精打细算",
        '事业': "有能力、专业、做领导和技术，亲力亲为，劳碌、压力大",
        '婚姻': "专一专注、眼光要求高，宁缺毋滥",
        '健康': "积劳成疾、易有肩颈、腰等病痛，睡眠不好，脱发掉发",
        '贵人': "缺乏贵人运",
        '特殊': "尾数延年益寿作用，19/91女性不能用"
    },
    '生气': {
        '性格': "乐观开朗，凡事看的开，不计较、不强求、喜欢帮助人，人缘好",
        '财运': "贵人来财或意外之财，留不住钱",
        '事业': "贵人多，适合服务、公关等工作，但上进心不足",
        '婚姻': "不强求、随缘、不计较，关系和谐，婚姻甜蜜",
        '健康': "肠胃及眼耳鼻疾病",
        '贵人': "贵人运的代名词，朋友多、好人缘",
        '特殊': "生气中间加0的，容易变成小人信息"
    },
    '伏位': {
        '性格': "有耐心和毅力、但死板、呆滞、认死理、固执、不会变通",
        '财运': "赚钱辛苦、喜欢拿固定工资",
        '事业': "循规蹈矩，按部就班，适合稳定性高的工作",
        '婚姻': "反复纠结、含蓄内敛、不敢主动、缺乏安全感",
        '健康': "心脏、脑部疾病、焦虑症，隐性的慢性病",
        '贵人': "家人会是你最佳的贵人",
        '特殊': "依附随从（随凶则凶，随吉则吉)"
    },
    '绝命': {
        '性格': "心地善良，重情义，敢冒险，易冲动，容易被骗",
        '财运': "喜欢投资，容易破财，留不住钱",
        '事业': "做投资、金融、股票类工作或自己创业",
        '婚姻': "协调能力差，不利婚姻，易离婚",
        '健康': "肝肾，糖尿病，甚至车祸，意外死亡",
        '贵人': "无贵人相助，凡事靠自己",
        '特殊': "容易不孕不育，易引起官非"
    },
    '祸害': {
        '性格': "能说会道、说直话、嘴硬、好面子、说大话、脾气急、抱怨",
        '财运': "开口来财但钱财留不住，容易因口舌而破财",
        '事业': "以口为业，容易口舌是非，工作爱抱怨",
        '婚姻': "容易吵架、离婚",
        '健康': "呼吸系统疾病，耗泄元气，易疲劳易累",
        '贵人': "无贵人相助，是非多",
        '特殊': "适合销售人员"
    },
    '五鬼': {
        '性格': "聪明、想法多、反应快、疑心重、不易相信人",
        '财运': "多偏财、暗财，钱财来得快去的快",
        '事业': "策划、贸易、命理宗教、互联网或特殊才能",
        '婚姻': "感情多变、易有三角恋、外遇、离婚",
        '健康': "心脏、血液问题，突发性疾病",
        '贵人': "疑心重，缺乏贵人运",
        '特殊': "高能量的五鬼数字+绝命数字极易引发癌症"
    },
    '六煞': {
        '性格': "亲和力足，人缘好，擅长交际，多心多疑，爱幻想，优柔寡断",
        '财运': "靠人际关系来财、守不住钱财",
        '事业': "公关、外交、服务、女性行业",
        '婚姻': "异性缘强、易偏桃花、婚外情",
        '健康': "皮肤病、肠胃、易患忧郁症",
        '贵人': "因敏感多疑伤害朋友，缺乏贵人运",
        '特殊': "16/61主年龄大的桃花，喜欢高档精致的东西"
    }
}

# 特殊组合含义
SPECIAL_COMBINATIONS = {
    ('生气', '天医'): "通过贵人带来财富",
    ('天医', '天医'): "财富能量汇集增强，且有婚姻现象",
    ('延年', '天医'): "靠专业能力赚钱",
    ('伏位', '天医'): "通过耐心坚持等待创造更大财富",
    ('六煞', '天医'): "通过服务行业赚钱",
    ('祸害', '天医'): "通过口才赚钱",
    ('五鬼', '天医'): "通过才华点子赚钱",
    ('绝命', '天医'): "通过拼搏努力赚钱或搞投资理财",
    ('天医', '祸害'): "钱财用在吃喝、看病上，在意血压问题",
    ('天医', '绝命'): "有钱就去投资且容易失败",
    ('祸害', '祸害'): "说话直接，招口舌，嘴硬，争吵",
    ('五鬼', '五鬼'): "最有才华也最不稳定，反应快且遇波折",
    ('五鬼', '祸害'): "容易说违心话，骗子用得多",
    ('五鬼', '绝命'): "不死也要半条命，健康问题严重"
}
# 添加特殊组合解释字典
SPECIAL_COMBINATIONS_MEANINGS = {
    '延年': {
        '夹5': "能力超强发挥，干劲十足，但容易有透支过度的状态，精力充沛，专业不断的提升，超出心里预期的回报，做事积极主动负责任，主动性比较强",
        '夹0': "延年的人没有什么情调，延年太多的女人没有什么女人味，六煞的人有情调。祸害和生气的人喜欢吃东西，能力发挥不出来，发挥不好，发挥的自己不满意，总是自我责怪，自我怀疑，有怀才不遇的感觉，付出多收获少，很难得到预期，主能力发挥不出来或发挥不佳达不到自己的预期，付出多回报少，心有余力不足，做事跟实际有很大差距",
        '跟5': "主耐力足，做事情持续，长久一根筋，固执，做事坚持到底不放弃，全力以赴，做事情任劳任怨，有一种不拿结果不罢休的感觉会持续不断的提升自己的专业能力",
        '跟0': "容易抱怨自己的工作，对现状不满意，对领导不满意，发牢骚，在工作上不顺尤，自身能力不足没有办法应对公司的压力，做事越来越力不从心，容易虎头蛇尾,刚开始激情四射而后高开低走，也主身体越来越虚弱，成就感越来越低。"
    },
    '天医': {
        '夹5': "主财富多贵人多，赚钱轻松活容易有意外之财，财富能留的住，婚姻感情持续甜密，贵人财运明显，为人善良喜欢帮助人，婚姻甜蜜喜美",
        '夹0': "有隐藏的地下情或隐婚史，容易有资产被套的信息或没办法变现，容易被朋友捅刀子或容易有第三者插足",
        '跟5': "主财富持续增强，赚钱持续，感情持续，也代表多个婚姻，感情好，事业一直稳定，财富持续显现，运势持续增加",
        '跟0': "感情慢慢变淡，贵人越来越少，赚钱越来越难，财富越来越少，财富慢慢缩小事业慢慢变小下滑，投资失败破财，破产，有可能有破婚离婚"
    },
    '生气': {
        '夹5': "主贵人多贵人给力，容易贵人来财，心胸宽广，积极乐观，应酬多，人际关系特别好，贪吃，贪玩，贪享受，一般肠胃不好。主动有人和你链接，贵人主动帮助，为人热情主动积极，心态好帮助",
        '夹0': "容易犯有小人，容易被借钱不还，或生闷气，自责，发牢骚抱怨，脾胃不好，有借钱不还被骗有小人员工朋友背叛",
        '跟5': "主贵人不但多而且长久与周边人的关系保持紧密长久，贵人主动帮忙，为人热情豪爽乐于助人，老朋友多或贵人持续长久，注重感情善于搞人际关系，有贵人或熟人长久合作",
        '跟0': "容易忘记贵人，贵人越来越少，人际关系不长久，更多的是利用人际关系，不重感情，感情来的快去的也快不长久，容易责怪别人，感情友谊慢慢的平淡谈不长久，有重复被欺骗和伤害的信息，贵人不给力，帮不上什么忙，看似没什么用"
    },

    
    '绝命': {
        '夹5': "胆大包天，只看的目标没有看到障碍，什么都敢干，为所欲为，想干就干，毫不疑迟，容易出意外，车祸，急性病，血光，开刀动手术，癌症。说干就干，无所顾忌，很难被改变，起起伏伏，讲义气",
        '夹0': "有隐藏的伤口或疾病，有破财的信息，只有冲动的想法但没有实际的行动在想法上冲动在做法上徘徊犹豫，想的很大，但有点虚张声势，容易摇摆，或变化性很强，容易得癌症或开刀动手术",
        '跟5': "主自己现在的状况决定还不够，或容易借钱投资，为所欲为，容易开刀动手术，钱不够花，有贷款要还，即使有资产也缺少现金流但死不认输，想倔强，不服输,做事有魄力，不计后果",
        '跟0': "胆量越来越小，魄力越来越小或想干但迈不出步伐担忧，有慢性疾病或有身体下滑虚弱的信息，容易虎头蛇尾，做事持续性不强，容易受外界干扰，有持续破财，病不容易治好"
    },
    '祸害': {
        '夹5': "是外在的，容易开刀动手术，比较容易见血光，有外伤或身上有伤疤，说话急躁，主动评判别人，攻击别人，争强好胜，喜欢在人群中凸显自己，不在乎对方的感受",
        '夹0': "心事不想说，但一旦有机会就会拼命的说并且表达非常厉害，有隐性的伤口，容易见血光，男人容易破财出车祸，女人容易剖腹产，是隐性的，容易出现内脏的隐性病，有心事不与人说，也代表隐性疾病",
        '跟5': "总觉得不说不够，或觉得表达不清楚，喜欢解释狡辩，容易受外伤或多次破财，说话喋喋不休，说服力强，打破砂锅问道低，一定要让对方听你的，容易有多次外伤，车祸",
        '跟0': "破财的信息，表达力不够，或说话没办法兑现，身体虚弱，或容易有馒性病或生病时间长，说话庭气不足，或抓不住重点，也代表说话出尔反尔"
    },
    '五鬼': {
        '夹5': "精明写在脸上，特别精明，喜欢动脑子，耍心眼，喜欢做决定，桀鹜不驯,很难听别人的，更加怪异，领袖超强，能预知事情，或特殊的天分，或常人没有具备的一项技能，容易有颈椎病,心脑血管疾病，也会有偏头痛的问题，有一项特殊的才华",
        '夹0': "有独特的想法，或有怪异的经历，不会跟让你透露自己真实的想法，第六感比较强，疑心病重，有点疑神疑鬼压力大惶惶不安，容易负面，焦虑，陷入负面的思考，容易有偏头痛，容易有灵异的事件，听到别人听不到的，看到别看不到的，有一种独特的异于常人的气质，很难高兴。",
        '跟5': "活在自己的世界很难抽离出来，也是爱幻想，与佛有缘或在这方面有先天造诣，容易给别出点子，反应及快,，想法及多，大脑极其敏锐，思路清晰大脑转速快，不停，同时想多件事。",
        '跟0': "想法多，忧心忡忡，惶惑不安，焦虑不安，没有安全感，胆子小或容易恐惧恐慌，害怕，容易受惊吓，所有的事情都停留在想象的层面，很少去操作执行，想的多做的少，有妄想症或自闭症，或小的时候有死亡的经历或危险的经历"
    },
    '六煞': {
        '夹5': "桃花特别旺，主有人主动喜欢，或遇到机会主动把握，桃花也转化成有效的结果，或容易被人知道，追求者多或有多段感情，或自身桃花容易被配偶知道或有两段感情，同时脚踏两只船容易被另一半知道，喜欢主动展示自己的魅力或释放暧昧的气质或感情持续甜蜜",
        '夹0': "有隐性桃花或有隐性的地下情，或比较喜欢暧昧自恋或不良嗜好，不想他人知道自己的秘密或内心想法不与人倾述，挑花不得正果，感情不长久",
        '跟5': "对感情执着或重视感情，在感情投入多或感情持续不久，藕断丝连念念不忘，感情开始一般会越来越炙热，桃花越来越往，持续性情或同时与多个异性链接，容易藕断丝连",
        '跟0': "感情和异性来的快去的也快，感情不长久或对感情投入的热情不够，持续性不够，感情慢慢变淡甚至消失，容易有抑郁失落的感觉，觉得自己可怜，孤苦伶仃的感觉，不长久恋爱归一平淡，容易陷入低潮或心情不好总是自我责怪"
    }
}


# 特殊信息检测
SPECIAL_INFO = {
    '骗子号': {
        '五鬼+祸害': ['189', '817', '798', '971', '364', '632', '246', '423'],
        '绝命+祸害': ['123', '217', '698', '964', '489', '846', '371', '732'],
        '祸害夹0': ['107', '701', '809', '908', '406', '604', '203', '302']
    },
    '熬夜伤神号': {
        '五鬼夹0': ['108', '801', '709', '907', '306', '603', '204', '402'],
        '延年+五鬼': ['197', '918', '781', '879', '342', '436', '263', '624'],
        '五鬼+延年': ['187', '819', '791', '978', '362', '634', '243', '426']
    },
    '女性破婚号': [
        '109', '901', '1009', '9001', '159', '951', '1559', '9551', '1059', '199',
        '708', '807', '877', '788'
    ],
    '小三号': {
        '五鬼+六煞': ['183', '816', '792', '974', '361', '638', '247', '429'],
        '六煞+祸害': ['164', '617', '471', '746', '389', '832', '298', '923'],
        '六煞夹0': ['106', '601', '407', '704', '308', '803', '209', '902']
    },
    '房产特征': {
        '延年+大五鬼': ['918', '197', '879', '781'],
        '绝命+大延年': ['219', '378', '691', '487'],
        '大五鬼+大延年': ['819', '978', '187', '791'],
        '延年+大天医': ['913', '786'],
        '大五鬼+大天医': ['813', '186', '631', '368']
    },
    '破财号': {
        '天医+祸害': ['132', '317', '689', '864', '498', '946', '271', '723'],
        '天医跟0': ['130', '310', '680', '860', '490', '940', '270', '720'],
        '天医+绝命': ['137', '312', '684', '869', '496', '948', '273', '721'],
        '六煞+祸害': ['164', '617', '471', '746', '389', '832', '298', '923']
    },
    '进财号': {
        '六煞+延年': ['162', '619', '478', '743', '387', '834', '291', '926'],
        '五鬼+天医': ['186', '813', '794', '972', '368', '631', '249', '427'],
        '天医+延年': ['134', '319', '687', '862', '491', '943', '278', '726'],
        '五鬼+延年': ['187', '819', '791', '978', '362', '634', '243', '426']
    }
}

# 特殊信息的详细解释
SPECIAL_INFO_DETAILS = {
    '骗子号': {
        '五鬼+祸害': '存心骗人，说假话，说话目的性强',
        '绝命+祸害': '吹牛逼，说话水分大，容易说大话，很会包装',
        '祸害夹0': '说话表里不一，见机行事，不一定会说真实的话，比较有城府'
    },
    '熬夜伤神号': {
        '五鬼夹0': '忧心忡忡，一点小事就纠结',
        '延年+五鬼': '容易失眠熬夜，夜间工作，夜间思考',
        '五鬼+延年': '过于注重细节，强迫症，做事太过严谨，一定要把事情做完'
    },
    '女性破婚号': '轻者性格强势霸道有主见，自以为是；重者喜欢控制男人，要求多，掌控欲强；严重容易分居离异丧偶',
    '小三号': {
        '五鬼+六煞': '身体需求大，好色',
        '六煞+祸害': '容易多段感情，容易分手，不重视感情，感情来得快，去得也快',
        '六煞夹0': '容易有地下情'
    },
    '房产特征': {
        '延年+大五鬼': '喜欢理财，喜欢打造被动收入，稳定收入，买房容易是投资型的，容易利用杠杆，房产数量多',
        '绝命+大延年': '冲动胆子大，起伏大，容易买很多房产，但是也容易败掉，要注意理财',
        '大五鬼+大延年': '喜欢买大房子，房子数量不一定多，但都很精致，容易有房产或很多保险，但是容易焦虑，身体不好',
        '延年+大天医': '守财，不乱花钱，有钱就会买固定资产，基于保值的想法',
        '大五鬼+大天医': '喜欢投资房产物业，喜欢有被动收入，一般容易贷款买房，手上有很多套房产，但是容易缺乏现金流，倾向于买大房子、豪宅'
    },
    '破财号': {
        '天医+祸害': '容易有投资破财，感情争吵；容易被骗或被人借钱不还；容易投资失败，财富起伏不定',
        '天医跟0': '资产容易被套牢，或抵押贷款，也代表库存无法变现；产品或资金被大量冻结；财富不断减少，慢慢变得没钱，或者手上没有现金流；感情慢慢消退甚至破婚',
        '天医+绝命': '胆大冲动，野心大格局大，想赚大钱；财富起伏波动大，赚的钱不容易留住，花钱大手大脚；喜欢冒险，顺的时候财富很大，逆的时候倾家荡产',
        '六煞+祸害': '容易出现意外的破财或投资失败；不太适合赌博、炒股或其他见不得光的偏门投资，很难赚钱；容易被骗或被欠钱不还'
    },
    '进财号': {
        '六煞+延年': '非常省钱，容易有现金流；赚钱谨慎，勤劳',
        '五鬼+天医': '擅长投资或喜欢投资，在投资上有先天性的敏感或容易有投资回报；容易打造管道收入，被动收入，适合老板或营销策划型人才',
        '天医+延年': '抠门，比较省钱',
        '五鬼+延年': '喜欢赚钱，有钱就喜欢投资；赚钱辛苦，有可能有钱，但是比较小气；容易有慢性病、压力大，比较操心，郁闷，情绪不稳定'
    }
}


# 添加星组组合分析定义
ENERGY_FLOW_DETAILS = {
    # 1. 天医系列
    ('生气', '天医'): {
        'title': '生气→天医：贵人来财格',
        'details': [
            '通过贵人而带来财富',
            '生气情商高，有贵人运，通过贵人帮扶获得财富',
            '在工作中易得领导赏识，在事业上常有合作伙伴提携',
            '典型组合：413(41生气+13天医)、672(67生气+72天医)'
        ]
    },
    ('天医', '天医'): {
        'title': '天医→天医：财富汇聚格',
        'details': [
            '汇集增强的财富能量，且有婚姻现象',
            '财富能量双重叠加，财运特别旺盛',
            '感情生活稳定，婚姻幸福度高'
        ]
    },
    ('延年', '天医'): {
        'title': '延年→天医：专业创富格',
        'details': [
            '靠自己的专业能力赚钱',
            '延小，工作辛苦收获少，延大轻松赚大钱',
            '财富来源：专业技术、管理能力带来的稳定收入',
            '能量规律：延年数字越大工作越辛苦（如93>78）',
            '职业发展：适合专业技术岗或中层管理',
            '典型组合：913(91延年+13天医)、786(78延年+86天医)'
        ]
    },
    ('伏位', '天医'): {
        'title': '伏位→天医：耐心致富格',
        'details': [
            '通过耐心的坚持及等待，而创造更大的财富',
            '财富积累缓慢但稳定，适合长期投资',
            '事业发展需要时间沉淀，但基础牢固'
        ]
    },
    ('六煞', '天医'): {
        'title': '六煞→天医：服务得财格',
        'details': [
            '通过服务行业而赚钱',
            '需要细心的工作',
            '事业特征：女性相关或需要耐心的行业',
            '适合领域：美容、家政、心理咨询',
            '财富秘诀：通过优质服务获取回头客',
            '典型组合：613(61六煞+13天医)、847(84六煞+47天医)'
        ]
    },
    ('祸害', '天医'): {
        'title': '祸害→天医：口舌生财格',
        'details': [
            '通过口才而赚钱',
            '销售演讲主持等工作',
            '事业特征：靠语言表达能力获利的职业',
            '适合行业：销售、培训、主持、咨询',
            '能量提升：配合生气数字增强说服力',
            '典型组合：713(17祸害+13天医)、827(28祸害+27天医)'
        ]
    },
    ('五鬼', '天医'): {
        'title': '五鬼→天医：智谋生财格',
        'details': [
            '通过才华点子而赚钱',
            '需要强度灵活动脑的工作',
            '适合咨询及玄学等',
            '事业特征：需要创意的行业（策划、咨询、玄学）',
            '财富特征：靠独特思路获得非常规收入',
            '职业建议：IT、新媒体、跨境业务',
            '典型组合：813(81五鬼+13天医)、727(72五鬼+27天医)'
        ]
    },
    ('绝命', '天医'): {
        'title': '绝命→天医：冒险得财格',
        'details': [
            '通过拼搏努力而赚钱',
            '或搞投资理财',
            '财富特征：高风险高回报，适合投资创业',
            '事业特征：需要跑动的工作（如外贸、物流）',
            '感情特征：易闪婚，在感情中主动直接',
            '典型组合：213(21绝命+13天医)、694(69绝命+94天医)',
            '风险警示：需配合稳数字化解冲动投资'
        ]
    },
    
    # 2. 延年系列
    ('生气', '延年'): {
        'title': '生气→延年：贵人助业格',
        'details': [
            '通过贵人带来好工作',
            '做领导或老师格局，利读书，利升官，女性会强势',
            '事业发展：贵人提携，容易获得晋升机会',
            '适合领域：教育、管理、公务员'
        ]
    },
    ('天医', '延年'): {
        'title': '天医→延年：守财蓄富格',
        'details': [
            '有自己当老板的想法，善于搞投资创业等',
            '财务特征：理性消费，擅长理财，有积蓄习惯',
            '事业特征：多企业主/高管，收入随职位提升增长',
            '能量规律：结尾延年数字越大守财力越强',
            '典型组合：319(31天医+19延年)、862(86天医+62延年)'
        ]
    },
    ('延年', '延年'): {
        'title': '延年→延年：专业领导格',
        'details': [
            '专业能力强，有权利有领导力',
            '事业特征：适合管理岗位，有较强的组织能力',
            '性格特征：自律性强，做事有条理，责任感强'
        ]
    },
    ('伏位', '延年'): {
        'title': '伏位→延年：蓄势待发格',
        'details': [
            '蓄势延年能量，能力更强大，有权利',
            '事业发展：稳步上升，有长期规划',
            '领导风格：稳重踏实，不急功近利'
        ]
    },
    ('六煞', '延年'): {
        'title': '六煞→延年：服务管理格',
        'details': [
            '在行政或服务行业的工作',
            '会处理好与女人之间的关系，及人际系',
            '适合职位：行政主管、人事经理、客户关系管理'
        ]
    },
    ('祸害', '延年'): {
        'title': '祸害→延年：口才专业格',
        'details': [
            '口才行业的工作',
            '有能力，口才好，大多以口为业',
            '适合行业：培训讲师、律师、谈判专家'
        ]
    },
    ('五鬼', '延年'): {
        'title': '五鬼→延年：创意专业格',
        'details': [
            '需要强度灵活动脑的工作',
            '思维活跃，创新能力强',
            '适合行业：研发、设计、策划、咨询'
        ]
    },
    ('绝命', '延年'): {
        'title': '绝命→延年：冒险专业格',
        'details': [
            '胆大敢拼的工作，想买房，投资理财',
            '性格特征：敢于冒险，决策果断',
            '适合行业：投资、房产、创业'
        ]
    },
    
    # 3. 生气系列
    ('生气', '生气'): {
        'title': '生气→生气：贵人汇聚格',
        'details': [
            '汇集增强的贵人能量',
            '人缘极佳，社交圈广泛',
            '容易获得多方面的帮助和支持'
        ]
    },
    ('天医', '生气'): {
        'title': '天医→生气：散财助人格',
        'details': [
            '懂朋友，对朋友大方，人缘好，花不少钱在朋友们身上',
            '财务特征：满意现状，消费大方，不重储蓄',
            '人际特征：80%收入用于亲友，常为他人买单',
            '感情特征：夫妻关系易被朋友分薄，需注意平衡',
            '典型组合：318(31天医+18生气)、864(86天医+64生气)'
        ]
    },
    ('延年', '生气'): {
        'title': '延年→生气：轻松工作格',
        'details': [
            '工作开心，工作后很开心，没有感到多大的压力',
            '利读书',
            '事业特征：工作氛围轻松，人际关系融洽',
            '适合行业：教育、服务、公关'
        ]
    },
    ('伏位', '生气'): {
        'title': '伏位→生气：蓄势贵人格',
        'details': [
            '蓄势生气能量，让生气变得更强大有力',
            '人际关系：稳定且长久的友谊',
            '事业发展：贵人相助，稳步前进'
        ]
    },
    ('六煞', '生气'): {
        'title': '六煞→生气：公关高手格',
        'details': [
            '人缘好，对人热情，有好的人际关系',
            '顶级公关高手',
            '适合行业：公关、外交、服务业',
            '性格特征：善于交际，情商高'
        ]
    },
    ('祸害', '生气'): {
        'title': '祸害→生气：口才魅力格',
        'details': [
            '口才佳，能说出有价值的话，说得让人动听，让人喜欢!',
            '适合行业：演讲、销售、主持',
            '性格特征：表达能力强，有说服力'
        ]
    },
    ('五鬼', '生气'): {
        'title': '五鬼→生气：创意贵人格',
        'details': [
            '动头脑，能想到好的点子，有用处有光明的方案',
            '思维特点：创新且实用，点子能被接受',
            '适合行业：创意策划、咨询顾问'
        ]
    },
    ('绝命', '生气'): {
        'title': '绝命→生气：愉快拼搏格',
        'details': [
            '打拼得很开心',
            '性格特征：乐观向上，积极进取',
            '事业发展：即使面对挑战也能保持良好心态'
        ]
    },
    
    # 4. 伏位系列
    ('生气', '伏位'): {
        'title': '生气→伏位：贵人延续格',
        'details': [
            '生气磁场得到延续',
            '人际关系：贵人相助持续稳定',
            '事业发展：人脉资源长期有效'
        ]
    },
    ('天医', '伏位'): {
        'title': '天医→伏位：财富延续格',
        'details': [
            '天医磁场得到延续',
            '财富特征：财运稳定持久，不易破财',
            '投资特点：偏好稳健型投资，长期持有'
        ]
    },
    ('延年', '伏位'): {
        'title': '延年→伏位：能力延续格',
        'details': [
            '努力去做事，并且是被动地去做',
            '延续',
            '工作特点：踏实肯干，持之以恒',
            '事业发展：稳步上升，不求快速'
        ]
    },
    ('伏位', '伏位'): {
        'title': '伏位→伏位：蓄势加强格',
        'details': [
            '蓄势待发，增强伏位势力',
            '伏位磁场得到延续',
            '性格特征：极度稳重，不易冲动',
            '事业发展：需要长期积累才能见效'
        ]
    },
    ('六煞', '伏位'): {
        'title': '六煞→伏位：情感延续格',
        'details': [
            '六煞磁场得到延续',
            '感情特征：情感持久但可能缺乏激情',
            '人际关系：社交圈稳定但不易扩展'
        ]
    },
    ('祸害', '伏位'): {
        'title': '祸害→伏位：口舌延续格',
        'details': [
            '祸害磁场得到延续',
            '表达特点：言辞犀利但持久一致',
            '人际影响：可能长期处于口舌是非中'
        ]
    },
    ('五鬼', '伏位'): {
        'title': '五鬼→伏位：创意延续格',
        'details': [
            '五鬼磁场得到延续',
            '思维特点：创意持久但可能缺乏实践',
            '事业发展：点子多但执行力需加强'
        ]
    },
    ('绝命', '伏位'): {
        'title': '绝命→伏位：冲动延续格',
        'details': [
            '绝命磁场得到延续',
            '性格特征：冲动持久，难以改变',
            '风险提示：长期冒险行为可能带来严重后果'
        ]
    },
    
    # 5. 六煞系列
    ('生气', '六煞'): {
        'title': '生气→六煞：贵人桃花格',
        'details': [
            '因朋友而带财，异性缘好',
            '人际特点：社交圈广，异性朋友多',
            '财运特点：通过社交获得财富机会'
        ]
    },
    ('天医', '六煞'): {
        'title': '天医→六煞：情财纠缠格',
        'details': [
            '易因女性破财，偏桃花，影响婚姻感情，容易出轨',
            '财务特征：为异性/家庭花费大',
            '感情特征：占有欲强，易因吃醋争执',
            '家居影响：常有大额家居用品支出',
            '典型组合：316(31天医+16六煞)、847(84天医+47六煞)',
            '平衡建议：搭配延年数字增强理性'
        ]
    },
    ('延年', '六煞'): {
        'title': '延年→六煞：忧郁工作格',
        'details': [
            '工作做得不开心，常忧郁，不果决',
            '工作特点：缺乏热情，效率不高',
            '心理状态：容易焦虑，对工作不满'
        ]
    },
    ('伏位', '六煞'): {
        'title': '伏位→六煞：蓄势情感格',
        'details': [
            '蓄势待发，增强六煞势力',
            '感情特点：情感压抑，不易表达',
            '人际关系：社交圈小，关系深入'
        ]
    },
    ('六煞', '六煞'): {
        'title': '六煞→六煞：忧郁加深格',
        'details': [
            '增强忧郁感，自闭症',
            '情绪不稳定，人际关系会突然恶化',
            '偏桃花',
            '心理状态：情绪波动大，易抑郁',
            '感情特点：桃花多但不稳定，易有感情纠葛'
        ]
    },
    ('祸害', '六煞'): {
        'title': '祸害→六煞：言语失效格',
        'details': [
            '讲出话得不到回应，让人纳闷无语',
            '情绪不好',
            '表达特点：言辞不被理解，沟通困难',
            '人际影响：容易被孤立，缺乏共鸣'
        ]
    },
    ('五鬼', '六煞'): {
        'title': '五鬼→六煞：思维混乱格',
        'details': [
            '想法很纳闷，无有用处',
            '思维特点：创意不切实际，难以实现',
            '心理状态：思绪混乱，缺乏逻辑'
        ]
    },
    ('绝命', '六煞'): {
        'title': '绝命→六煞：忧郁拼搏格',
        'details': [
            '拼得很忧郁，没有激情',
            '工作特点：努力但缺乏热情，被迫感强',
            '心理状态：压力大，容易精神疲惫'
        ]
    },
    
    # 6. 祸害系列
    ('生气', '祸害'): {
        'title': '生气→祸害：言论争议格',
        'details': [
            '自认为很好的东西，讲出来且招到议论纷纷',
            '表达特点：言辞引发争议，观点不被认同',
            '人际影响：因言论导致人际关系紧张'
        ]
    },
    ('天医', '祸害'): {
        'title': '天医→祸害：财损口业格',
        'details': [
            '爱花钱，爱面子，爱买吃的，总想买好的，容易破婚',
            '财务特征：因健康/口舌纠纷破财',
            '健康警示：易患高血压、消化系统疾病',
            '人际风险：因利益分配引发矛盾',
            '典型组合：317(31天医+17祸害)、862(86天医+62祸害)',
            '化解建议：搭配延年数字稳定情绪'
        ]
    },
    ('延年', '祸害'): {
        'title': '延年→祸害：口舌挫折格',
        'details': [
            '会不断发生流言蜚语，领导能力上产生挫折，权力受到威胁',
            '做的事易后悔',
            '工作特点：能力受到质疑，权威不稳',
            '人际影响：易成为议论对象，名誉受损'
        ]
    },
    ('伏位', '祸害'): {
        'title': '伏位→祸害：固执言辞格',
        'details': [
            '口硬，铁齿，自以为是',
            '表达特点：固执己见，不接受他人意见',
            '人际影响：容易与人争执，不善变通'
        ]
    },
    ('六煞', '祸害'): {
        'title': '六煞→祸害：言语伤人格',
        'details': [
            '没有心情讲话，讲的容易得罪人的话',
            '表达特点：言辞尖锐，不考虑他人感受',
            '心理状态：情绪低落，易怒易怨'
        ]
    },
    ('祸害', '祸害'): {
        'title': '祸害→祸害：口舌加剧格',
        'details': [
            '说话直接，招口舌，铁齿，嘴硬，争吵，脾气暴躁，气短，没有耐性',
            '比较凶',
            '表达特点：言辞激烈，不留情面',
            '人际影响：易与多人产生矛盾，人缘差'
        ]
    },
    ('五鬼', '祸害'): {
        'title': '五鬼→祸害：言语诡异格',
        'details': [
            '容易见人说人话见鬼说鬼话，想法招口舌，容易破财',
            '表达特点：言辞模糊，让人难以理解',
            '人际影响：不被信任，易被误解'
        ]
    },
    ('绝命', '祸害'): {
        'title': '绝命→祸害：冲动言辞格',
        'details': [
            '做法招口舌，容易破财',
            '表达特点：言辞冲动，不经思考',
            '风险提示：言论可能导致严重后果'
        ]
    },
    
    # 7. 五鬼系列
    ('生气', '五鬼'): {
        'title': '生气→五鬼：贵人陷阱格',
        'details': [
            '容易犯小人，穿小鞋',
            '人际风险：表面友好实则暗算',
            '事业风险：被同事或合作伙伴背叛'
        ]
    },
    ('天医', '五鬼'): {
        'title': '天医→五鬼：财帛无常格',
        'details': [
            '因想法不结实际而耗财，乱投资',
            '财务特征：意外失财（被骗/被盗/投资失误）',
            '消费特征：计划外支出多，易被诱导消费',
            '能量规律：数字组合能量越大破财越严重',
            '典型组合：318(31天医+18五鬼)、763(76天医+63五鬼)',
            '防御措施：钱财分散管理，避免大额集中'
        ]
    },
    ('延年', '五鬼'): {
        'title': '延年→五鬼：多变工作格',
        'details': [
            '工作边做边想着变，想法多多，涉外的工作',
            '工作特点：计划多变，难以专注',
            '适合行业：需要创新和变通的工作'
        ]
    },
    ('伏位', '五鬼'): {
        'title': '伏位→五鬼：蓄势创意格',
        'details': [
            '蓄势待发，增强五鬼势力',
            '思维特点：创意丰富但不急于表达',
            '工作特点：点子多但执行慢'
        ]
    },
    ('六煞', '五鬼'): {
        'title': '六煞→五鬼：情绪多变格',
        'details': [
            '情绪变化无限，没有安全感，喜欢尝试各种新的，女孩子不要用易单身',
            '心理状态：情绪波动大，缺乏安全感',
            '感情特点：难以长期维持关系，易变心'
        ]
    },
    ('祸害', '五鬼'): {
        'title': '祸害→五鬼：言语诡异格',
        'details': [
            '容易说违心话，骗子用的比较多，表达的话都是奇异的话，让人感到莫名两可',
            '表达特点：言辞模糊，让人难以捉摸',
            '人际影响：不被信任，易被怀疑'
        ]
    },
    ('五鬼', '五鬼'): {
        'title': '五鬼→五鬼：才华不稳格',
        'details': [
            '最有才华也最不稳定，反应快且遇波折，不安定，想法多变',
            '思维特点：创意丰富但难以坚持',
            '事业发展：有才华但难成大器，缺乏恒心'
        ]
    },
    ('绝命', '五鬼'): {
        'title': '绝命→五鬼：冲动创意格',
        'details': [
            '很冲动作出奇异的想法',
            '决策特点：想法奇特但缺乏考虑',
            '风险提示：创意可能导致冒险行为'
        ]
    },
    
    # 8. 绝命系列
    ('生气', '绝命'): {
        'title': '生气→绝命：乐观冒险格',
        'details': [
            '很开心的拼搏，为了伟大梦想',
            '但不一定能实现',
            '心态特点：乐观向上，敢于冒险',
            '风险提示：目标可能过于理想化'
        ]
    },
    ('天医', '绝命'): {
        'title': '天医→绝命：财来财去格',
        'details': [
            '有钱就会去投资，思考不周密，易导致破财',
            '财务特征：投资失败率高，易赌博破财',
            '消费特征：冲型消费（如限量款、闪购）',
            '感情特征：离婚率高（尤其312/869组合）',
            '典型组合：312(31天医+12绝命)、869(86天医+69绝命)',
            '化解建议：搭配伏位数字延缓冲型'
        ]
    },
    ('延年', '绝命'): {
        'title': '延年→绝命：工作波折格',
        'details': [
            '工作不想干了，工作上大多波折',
            '感情不好',
            '人际关系不好',
            '工作特点：难以坚持，容易放弃',
            '心理状态：对工作失去热情，倦怠感强'
        ]
    },
    ('伏位', '绝命'): {
        'title': '伏位→绝命：蓄势爆发格',
        'details': [
            '蓄势冲动，不冲而已，一冲冲天',
            '工作上非常拼',
            '性情上胆大包天',
            '行为特点：平时沉稳，爆发力强',
            '风险提示：爆发后难以控制，后果严重'
        ]
    },
    ('六煞', '绝命'): {
        'title': '六煞→绝命：情感冲动格',
        'details': [
            '带情绪地辛苦努力',
            '带被迫感，感情来得快去得也快，泡妞不要命，容易嫖娼、点男模',
            '感情特点：冲动追求，不计后果',
            '风险提示：感情决策易后悔，代价大'
        ]
    },
    ('祸害', '绝命'): {
        'title': '祸害→绝命：言语伤人格',
        'details': [
            '讲话会很冲动',
            '最容易讲话伤人',
            '表达特点：言辞激烈，不考虑后果',
            '人际影响：言论可能造成不可挽回的伤害'
        ]
    },
        ('五鬼', '绝命'): {
        'title': '五鬼→绝命：冒险创富格',
        'details': [
            '当一有好的资讯，就会懂得去抓住，而去努力实现',
            '敢拼的人生',
            '容易赚到大钱，容易有意外',
            '事业特点：善于抓住机会，敢于冒险',
            '风险提示：成功率高但风险也大'
        ]
    },
    ('绝命', '绝命'): {
        'title': '绝命→绝命：冲动加剧格',
        'details': [
            '粗心大意、激动，冲动、偏激、易走极端',
            '易破财，不可赌博，不易理财',
            '破大财',
            '性格特点：冲动决策，不计后果',
            '风险提示：极易破财，投资失败率高'
        ]
    },


    # 7. 特殊组合提示
    'special_notes': {
        '房产特征': ['数字2/8多代表房产多', '大延年/天医结尾主大户型', '五鬼+天医适合投资房产'],
        '领导格局': ['结尾需大延年（19/78）', '忌绝命结尾易决策失误', '伏位+延年增强管理耐力'],
        '健康预警': [
            '天医+祸害：心脑血管疾病',
            '绝命+六煞：肝肾代谢问题',
            '五鬼+伏位：神经系统敏感'
        ]
    }
}
# 正确创建STAR_COMBINATIONS字典
STAR_COMBINATIONS = {}
for key, details in ENERGY_FLOW_DETAILS.items():
    # 只处理键是元组的情况（星组对）
    if isinstance(key, tuple):
        star1, star2 = key
        if star1 not in STAR_COMBINATIONS:
            STAR_COMBINATIONS[star1] = {}
        STAR_COMBINATIONS[star1][star2] = details['details'][0] if details['details'] else details['title']



def analyze_phone_number(phone_number):
    """主分析函数"""
    # 去掉前3位号段
    analysis_number = phone_number[3:] if len(phone_number) >= 11 else phone_number

    results = {
        '五行分析': analyze_element(analysis_number),
        '八星分布': find_star_groups(analysis_number),
        '尾号分析': analyze_tail_number(analysis_number),  # 确保使用中文键名
        '能量流动': analyze_energy_flow(analysis_number),
        '特殊信息': check_special_info(analysis_number)
    }


    return results

def get_energy_level(star_name, number_pair):
    """获取星组能量等级（从STAR_ENERGY_LEVELS字典中查找）"""
    return next(
        (level for level, pairs in STAR_ENERGY_LEVELS[star_name].items()
         if number_pair in pairs),
        0
    )



def analyze_element(number):
    """分析逻辑1：五行能量分析"""
    digit_counts = Counter(number)
    element_counts = {}

    for digit, count in digit_counts.items():
        if digit in DIGIT_TO_ELEMENT:
            element = DIGIT_TO_ELEMENT[digit]
            element_counts[element] = element_counts.get(element, 0) + count

    dominant_element = max(element_counts.items(), key=lambda x: x[1]) if element_counts else ("无", 0)
    dominant_digits = [d for d in number if DIGIT_TO_ELEMENT.get(d, '') == dominant_element[0]]

    personality = []
    for d in set(dominant_digits):
        personality.append(f"{d}: {DIGIT_PERSONALITY.get(d, '无信息')}")

    return {
        '五行统计': element_counts,
        '主导五行': dominant_element,
        '数字性格': personality
    }


def find_star_groups(number):
    """分析逻辑2/3：查找八星组合"""
    stars_found = {}
    digit_pairs = [number[i:i + 2] for i in range(len(number) - 1)]
    
    # 查找所有八星组合
    for name, groups in STAR_GROUPS.items():
        found = []
        for pair in digit_pairs:
            if pair in groups:
                found.append(pair)
        if found:
            stars_found[name] = {
                'count': len(found),
                'pairs': found,
                'hidden_pairs': [],
                'meaning': STAR_MEANINGS.get(name, {})
            }

    # 检查特殊组合
    triple_groups = [number[i:i + 3] for i in range(len(number) - 2)]
    
    # 检查夹0/5情况（0/5在中间位置）
    for triple in triple_groups:
        if triple[1] in ('0', '5'):
            left = triple[0]
            right = triple[2]
            hidden_pair = left + right
            for star_name, groups in STAR_GROUPS.items():
                if hidden_pair in groups:
                    if star_name not in stars_found:
                        stars_found[star_name] = {
                            'count': 0,
                            'pairs': [],
                            'hidden_pairs': [],
                            'meaning': STAR_MEANINGS.get(star_name, {})
                        }
                    stars_found[star_name]['hidden_pairs'].append({
                        'full': triple,
                        'pair': hidden_pair,
                        'type': '夹0' if triple[1] == '0' else '夹5'
                    })
                    stars_found[star_name]['count'] += 1
    
    # 检查跟5/跟0情况（5/0在第一位）
    for triple in triple_groups:
        if triple[0] in ('0', '5'):
            pair = triple[1:]
            for star_name, groups in STAR_GROUPS.items():
                if pair in groups:
                    if star_name not in stars_found:
                        stars_found[star_name] = {
                            'count': 0,
                            'pairs': [],
                            'hidden_pairs': [],
                            'meaning': STAR_MEANINGS.get(star_name, {})
                        }
                    stars_found[star_name]['hidden_pairs'].append({
                        'full': triple,
                        'pair': pair,
                        'type': '跟0' if triple[0] == '0' else '跟5'
                    })
                    stars_found[star_name]['count'] += 1

    # 确定主导星
    dominant_star = ("无", {'count': 0})
    if stars_found:
        dominant_star = max(stars_found.items(), key=lambda x: x[1]['count'])

    return {
        'stars': stars_found,
        'dominant_star': dominant_star
    }
def analyze_star_energy(star_name, pairs):
    """分析星组能量"""
    energy_levels = {}
    total_energy = 0
    max_energy_level = 0
    
    for pair in pairs:
        level = get_energy_level(star_name, pair)
        energy_levels[pair] = level
        total_energy += level
        if level > max_energy_level:
            max_energy_level = level
    
    return {
        'energy_levels': energy_levels,
        'total_energy': total_energy,
        'max_energy_level': max_energy_level
    }

def analyze_tail_number(number):
    """
    严格按优先级的尾号分析逻辑
    """
    tail = number[-4:] if len(number) >= 4 else number.zfill(4)[-4:]
    result = {
        'tail_number': tail,
        'analysis_type': None,
        'dominant_tail': {
            'star': None,
            'pairs': [],
            'energy_level': None,
            'meaning': {}
        },
        'tail_stars': []
    }
    # 查找最后4位中的所有星组
    digit_pairs = [tail[i:i+2] for i in range(len(tail)-1)]
    for pair in digit_pairs:
        for star_name, groups in STAR_GROUPS.items():
            if pair in groups:
                result['tail_stars'].append((star_name, pair))
    # 优先检查最后2位是否为完整星组
    last_two = tail[-2:]
    for star_name, groups in STAR_GROUPS.items():
        if last_two in groups:
            energy_level = get_energy_level(star_name, last_two)
            result.update({
                'analysis_type': '直接星组',
                'dominant_tail': {
                    'star': star_name,
                    'pairs': [last_two],
                    'energy_level': energy_level,
                    'meaning': STAR_MEANINGS.get(star_name, {})
                }
            })
            return result
    # 检查最后3位中的夹0/5情况
    if len(tail) >= 3:
        last_three = tail[-3:]
        for i in [1]:  # 只检查中间位
            if last_three[i] in ('0', '5'):
                left = last_three[i-1]
                right = last_three[i+1]
                hidden_pair = left + right
                for star_name, groups in STAR_GROUPS.items():
                    if hidden_pair in groups:
                        sandwich_type = '夹0' if last_three[i] == '0' else '夹5'
                        energy_level = get_energy_level(star_name, hidden_pair)
                        result.update({
                            'analysis_type': sandwich_type,
                            'dominant_tail': {
                                'star': star_name,
                                'pairs': [hidden_pair],
                                'energy_level': energy_level,
                                'meaning': {
                                    '财运': f"{sandwich_type}{star_name}：" +
                                    STAR_MEANINGS.get(star_name, {}).get('财运', '')
                                }
                            }
                        })
                        return result
    # 默认情况：没有检测到任何星组
    return result


def analyze_energy_flow(number):
    """分析逻辑7：能量流动分析"""
    flows = []
    
    # 1. 先找出所有常规星组
    regular_stars = {}
    digit_pairs = [number[i:i+2] for i in range(len(number)-1)]
    for i, pair in enumerate(digit_pairs):
        for star_name, groups in STAR_GROUPS.items():
            if pair in groups:
                if i not in regular_stars:
                    regular_stars[i] = []
                regular_stars[i].append((star_name, pair))
    
    # 2. 找出所有夹0/5和跟0/5的特殊星组
    special_stars = {}
    triple_groups = [number[i:i+3] for i in range(len(number)-2)]
    
    # 检查夹0/5情况（0/5在中间位置）
    for i, triple in enumerate(triple_groups):
        if triple[1] in ('0', '5'):
            left = triple[0]
            right = triple[2]
            hidden_pair = left + right
            for star_name, groups in STAR_GROUPS.items():
                if hidden_pair in groups:
                    if i not in special_stars:
                        special_stars[i] = []
                    special_stars[i].append((star_name, hidden_pair, f"夹{triple[1]}"))
    
    # 检查跟5/跟0情况（5/0在第一位）
    for i, triple in enumerate(triple_groups):
        if triple[0] in ('0', '5'):
            pair = triple[1:]
            for star_name, groups in STAR_GROUPS.items():
                if pair in groups:
                    if i not in special_stars:
                        special_stars[i] = []
                    special_stars[i].append((star_name, pair, f"跟{triple[0]}"))
    
    # 3. 合并所有星组并按位置排序
    all_stars = {}
    for i, stars in regular_stars.items():
        if i not in all_stars:
            all_stars[i] = []
        all_stars[i].extend([(star, pair, "常规") for star, pair in stars])
    
    for i, stars in special_stars.items():
        if i not in all_stars:
            all_stars[i] = []
        all_stars[i].extend(stars)
    
    # 4. 从前到后顺序生成能量流动
    positions = sorted(all_stars.keys())
    for i in range(len(positions)-1):
        pos1 = positions[i]
        pos2 = positions[i+1]
        
        # 确保位置相邻或中间只有一个位置
        if pos2 - pos1 > 2:
            continue
            
        for star1_info in all_stars[pos1]:
            for star2_info in all_stars[pos2]:
                star1, pair1, type1 = star1_info
                star2, pair2, type2 = star2_info
                
                # 检查是否有能量流动关系
                if star1 in STAR_COMBINATIONS and star2 in STAR_COMBINATIONS[star1]:
                    # 构建组合信息
                    if type1 == "常规" and type2 == "常规":
                        combination = pair1[0] + pair1[1] + pair2[1]
                    elif type1.startswith("夹") and type2 == "常规":
                        combination = pair1[0] + "0/5" + pair1[1] + pair2[1]
                    elif type1 == "常规" and type2.startswith("夹"):
                        combination = pair1[0] + pair1[1] + "0/5" + pair2[1]
                    else:
                        combination = f"{pair1}→{pair2}"
                    
                    flows.append({
                        'combination': combination,
                        'stars': f"{star1}→{star2}",
                        'meaning': STAR_COMBINATIONS[star1][star2],
                        'type1': type1,
                        'type2': type2
                    })
                
                # 检查反向能量流动
                elif star2 in STAR_COMBINATIONS and star1 in STAR_COMBINATIONS[star2]:
                    # 构建组合信息
                    if type1 == "常规" and type2 == "常规":
                        combination = pair1[0] + pair1[1] + pair2[1]
                    elif type1.startswith("夹") and type2 == "常规":
                        combination = pair1[0] + "0/5" + pair1[1] + pair2[1]
                    elif type1 == "常规" and type2.startswith("夹"):
                        combination = pair1[0] + pair1[1] + "0/5" + pair2[1]
                    else:
                        combination = f"{pair1}→{pair2}"
                    
                    flows.append({
                        'combination': combination,
                        'stars': f"{star2}→{star1}",
                        'meaning': STAR_COMBINATIONS[star2][star1],
                        'type1': type1,
                        'type2': type2
                    })

    return flows


def check_special_info(number):
    """分析逻辑8：特殊信息检测"""
    detected = []
    
    # 检查所有特殊组合
    for info_type, patterns in SPECIAL_INFO.items():
        # 处理简单列表形式的特殊组合（如女性破婚号）
        if isinstance(patterns, list):
            found = [pattern for pattern in patterns if pattern in number]
            if found:
                detected.append({
                    'type': info_type,
                    'patterns': found,
                    'details': SPECIAL_INFO_DETAILS.get(info_type, ""),
                    'warning': get_special_warning(info_type)
                })
        # 处理嵌套字典形式的特殊组合（如骗子号、熬夜伤神号等）
        elif isinstance(patterns, dict):
            for subtype, subpatterns in patterns.items():
                found = [pattern for pattern in subpatterns if pattern in number]
                if found:
                    detected.append({
                        'type': info_type,
                        'subtype': subtype,
                        'patterns': found,
                        'details': SPECIAL_INFO_DETAILS.get(info_type, {}).get(subtype, ""),
                        'warning': get_special_warning(info_type)
                    })
    
    return detected

def get_special_warning(info_type):
    """获取特殊信息的警告说明"""
    warnings = {
        '骗子号': "此号码组合容易有欺骗倾向，注意交往关系",
        '熬夜伤神号': "此号码组合易导致熬夜失眠等问题，注意健康",
        '女性破婚号': "女性使用此号码可能导致婚姻问题，需谨慎",
        '小三号': "此号码组合易招桃花，可能导致感情纠纷",
        '破财号': "此号码组合易导致破财，需注意理财",
        '进财号': "此号码组合有助于财运，可善加利用",
        '房产特征': "此号码组合与房产投资相关，可能影响购房决策"
    }
    return warnings.get(info_type, "需注意的特殊情况")


def get_number_energy_level(star_name, number_pair):
    """获取数字组合的能量等级"""
    if star_name in STAR_ENERGY_LEVELS:
        for level, pairs in STAR_ENERGY_LEVELS[star_name].items():
            if number_pair in pairs:
                return level
    return 0


def analyze_star_energy(star_name, pairs):
    """分析星组的能量等级"""
    energy_levels = {}
    total_energy = 0
    max_energy_level = 0

    for pair in pairs:
        level = get_number_energy_level(star_name, pair)
        energy_levels[pair] = level
        total_energy += level
        max_energy_level = max(max_energy_level, level)

    return {
        'energy_levels': energy_levels,
        'total_energy': total_energy,
        'max_energy_level': max_energy_level
    }


def analyze_star_combinations(stars_data):
    """分析星组之间的组合关系"""
    combinations = []
    stars = list(stars_data.keys())

    for i in range(len(stars)):
        for j in range(i + 1, len(stars)):
            star1 = stars[i]
            star2 = stars[j]
            if star1 in STAR_COMBINATIONS and star2 in STAR_COMBINATIONS[star1]:
                combinations.append({
                    'star1': star1,
                    'star2': star2,
                    'meaning': STAR_COMBINATIONS[star1][star2]
                })
            elif star2 in STAR_COMBINATIONS and star1 in STAR_COMBINATIONS[star2]:
                combinations.append({
                    'star1': star2,
                    'star2': star1,
                    'meaning': STAR_COMBINATIONS[star2][star1]
                })

    return combinations
# 在visualize_results函数中添加特殊信息的可视化部分
def visualize_special_info(special_info):
    """可视化特殊信息部分"""
    st.header("5. 特殊信息分析")
    
    if not special_info:
        st.write("未检测到特殊信息")
        return
    
    # 按类型分组显示特殊信息
    for info in special_info:
        # 设置不同类型的图标
        icons = {
            '骗子号': '🎭',
            '熬夜伤神号': '😴',
            '女性破婚号': '💔',
            '小三号': '💋',
            '破财号': '💸',
            '进财号': '💰',
            '房产特征': '🏠'
        }
        icon = icons.get(info['type'], '⚠️')
        
        # 创建可展开的部分
        with st.expander(f"{icon} {info['type']}"):
            # 显示子类型（如果有）
            if 'subtype' in info:
                st.markdown(f"**组合类型**: {info['subtype']}")
            
            # 显示匹配的模式
            st.markdown(f"**匹配组合**: {', '.join(info['patterns'])}")
            
            # 显示详细信息
            if 'details' in info and info['details']:
                st.markdown(f"**详细解释**: {info['details']}")
            
            # 显示警告信息
            if 'warning' in info:
                st.warning(info['warning'])


def visualize_results(results):
    """可视化分析结果"""
      # 1.  八星分布
    st.header("1. 八星组合分析")
    stars_data = results['八星分布']
    if stars_data['stars']:
        # 计算每个星组的能量
        stars_with_energy = []
        for star, data in stars_data['stars'].items():
            # 合并常规组合和隐藏组合来计算能量
            all_pairs = data.get('pairs', [])
            for hidden in data.get('hidden_pairs', []):
                all_pairs.append(hidden['pair'])

            energy_analysis = analyze_star_energy(star, all_pairs)
            stars_with_energy.append((
                star,
                data,
                energy_analysis['total_energy'],
                energy_analysis['max_energy_level'],
                energy_analysis['energy_levels']
            ))
            
        # 添加八星可视化图表
        st.subheader("八星能量分布")
        
        # 设置中文字体解决乱码问题
        plt.rcParams['font.sans-serif'] = ['Arial Unicode MS', 'SimHei']  # 设置中文字体
        plt.rcParams['axes.unicode_minus'] = False  # 解决负号显示问题
        
        # 准备图表数据
        star_names = [star for star, _, _, _, _ in stars_with_energy]
        star_counts = [data['count'] for _, data, _, _, _ in stars_with_energy]
        star_energies = [energy for _, _, energy, _, _ in stars_with_energy]
        
        # 创建双轴图表
        fig, ax1 = plt.subplots(figsize=(12, 6))
        
        # 第一个轴：星组数量（柱状图）
        bars = ax1.bar(star_names, star_counts, color='skyblue', alpha=0.7, label='出现次数')
        ax1.set_xlabel('星组', fontsize=12)
        ax1.set_ylabel('出现次数', fontsize=12, color='royalblue')
        ax1.tick_params(axis='y', labelcolor='royalblue')
        
        # 第二个轴：星组能量（折线图）
        ax2 = ax1.twinx()
        ax2.plot(star_names, star_energies, 'ro-', linewidth=2, markersize=8, label='能量值')
        ax2.set_ylabel('能量值', fontsize=12, color='crimson')
        ax2.tick_params(axis='y', labelcolor='crimson')
        
        # 在折线图上添加数值标签
        for i, energy in enumerate(star_energies):
            ax2.text(i, energy + 0.3, f'{energy}', ha='center', va='bottom', color='crimson')
        
        # 添加图例
        lines, labels = ax1.get_legend_handles_labels()
        lines2, labels2 = ax2.get_legend_handles_labels()
        ax2.legend(lines + lines2, labels + labels2, loc='upper right')
        
        # 设置标题和网格
        plt.title('八星组合分布与能量对比', fontsize=14, pad=20)
        ax1.grid(axis='y', linestyle='--', alpha=0.3)
        
        # 调整布局
        plt.tight_layout()
        
        # 显示图表
        st.pyplot(fig)
        plt.close()
        
        # 显示所有星组
        st.subheader("八星详细分析")
        for star, data, total_energy, max_level, energy_levels in stars_with_energy:
            with st.expander(f"{star}星（{data['count']}次，能量:{total_energy}）"):
                tab1, tab2, tab3 = st.tabs(["🔢 数字组合", "🎭 特殊组合", "📋 特性分析"])

                with tab1:
                    # 显示常规数字组合
                    if data.get('pairs'):
                        st.markdown("**常规组合**:")
                        for pair in data['pairs']:
                            st.markdown(f"- `{pair}`")

                    # 显示隐藏数字组合

                    if data.get('hidden_pairs'):
                        st.markdown("**特殊组合**:")
                        for hidden in data['hidden_pairs']:
                            st.markdown(f"- `{hidden['full']}` (夹0/5:  {hidden['pair']})")

               # 在visualize_results函数中的tab2部分
                # 在visualize_results函数中的tab2部分
                with tab2:
                    if data.get('hidden_pairs'):
                        for hidden in data['hidden_pairs']:
                            st.markdown(f"**{hidden['type']}{star}** (组合: `{hidden['full']}`)")
                            special_meaning = SPECIAL_COMBINATIONS_MEANINGS.get(star, {}).get(hidden['type'], "无特定解释")
                        st.write(special_meaning)
                
                with tab3:
                    for category, meaning in data['meaning'].items():
                        icons = {
                            '性格': '👤', '财运': '💰', '事业': '💼',
                            '婚姻': '💑', '健康': '🏥', '贵人': '🤝',
                            '特殊': '✨'
                        }
                        icon = icons.get(category, '•')
                        st.markdown(f"{icon} **{category}:** {meaning}")
    # 2. 能量流动
   # 在visualize_results函数中的能量流动分析部分
   # 在visualize_results函数中的能量流动分析部分修改为：
        st.header("2. 能量流动分析")
        if results['能量流动']:
         for flow in results['能量流动']:
        # 获取能量流动的详细信息
          flow_key = (flow['stars'].split('→')[0], flow['stars'].split('→')[1])
        flow_details = ENERGY_FLOW_DETAILS.get(flow_key, None)
        
        # 构建标题
        title = f"组合 {flow['combination']} ({flow['stars']})"
        if 'type1' in flow or 'type2' in flow:
            types = []
            if 'type1' in flow and flow['type1'] != "常规":
                types.append(flow['type1'])
            if 'type2' in flow and flow['type2'] != "常规":
                types.append(flow['type2'])
            if types:
                title += f" [{', '.join(types)}]"
        
        with st.expander(title):
            # 只显示一次基本含义，避免重复
            base_meaning = flow['meaning']
            detail_meaning = flow_details['details'][0] if flow_details and flow_details['details'] else ""
            
            # 只有当详细解释不完全包含基本含义时才显示基本含义
            if not (detail_meaning and base_meaning in detail_meaning):
                st.markdown(f"**基本含义**: {base_meaning}")
            
            if flow_details:
                st.markdown(f"**{flow_details['title']}**")
                # 跳过第一个细节如果它已经包含了基本含义
                start_idx = 0
                if detail_meaning and base_meaning in detail_meaning:
                    start_idx = 1
                for detail in flow_details['details'][start_idx:]:
                    st.markdown(f"- {detail}")
            
            # 添加能量进度条
            energy_level = min(70 + len(flow['meaning']), 100)  # 简单计算能量值
            st.progress(energy_level/100, text=f"能量等级: {energy_level}%")
            
        st.markdown("---")
    else:
        st.write("无明显能量流动模式")


            # ================== 尾号分析 ==================
    st.header("3. 尾号能量分析")
    tail_data = results['尾号分析']
    cols = st.columns([1, 3])
    with cols[0]:
        st.markdown(f"### 尾号\n**{tail_data['tail_number']}**")
        st.caption(f"分析类型: {tail_data.get('analysis_type', '标准尾号')}")

    with cols[1]:
        dom = tail_data['dominant_tail']
        if dom['star']:
            # 创建更好的显示格式
            level_color = "#FFA500"  # 默认橙色
            if dom['energy_level'] == 4:
                level_color = "#FFD700"  # 金色
            elif dom['energy_level'] == 2:
                level_color = "#FF8C00"  # 暗橙色
            elif dom['energy_level'] == 1:
                level_color = "#FF4500"  # 红色

            st.markdown("**主星组信息**")
            st.markdown(f"""
                   - **星组名称**: {dom['star']}星
                   - **能量等级**: <span style='color:{level_color}; font-weight:bold;'>{dom['energy_level']}级能量</span>
                   - **数字组合**: {', '.join(dom['pairs'])}
               """, unsafe_allow_html=True)

            st.markdown("**财运特征**")
            st.info(dom['meaning'].get('财运', '无特殊财运特征'))
        else:
            st.info("未检测到显著星组特征")

    # 显示尾号中找到的所有星组
    if tail_data['tail_stars']:
        st.subheader("尾号星组")
        cols = st.columns(4)
        for i, (star, pair) in enumerate(tail_data['tail_stars']):
            cols[i % 4].markdown(f"- {star}: `{pair}`")

    st.markdown("---")
# 在visualize_results函数中的五行分析部分
    # 4. 五行能量分析
    st.header("4. 五行能量分析")
    element_data = results['五行分析']
    st.subheader("五行统计")

    # 定义五行顺序和对应的颜色，添加说明文字
    element_order = ['木', '火', '土', '金', '水']
    element_colors = {
        '木': '#4CAF50',  # 绿色
        '火': '#F44336',  # 红色
        '土': '#795548',  # 棕色
        '金': '#FFD700',  # 金色
        '水': '#2196F3'  # 蓝色
    }

    element_descriptions = {
        '木': '木（绿色）：代表生长、发展',
        '火': '火（红色）：代表温暖、光明',
        '土': '土（棕色）：代表稳重、包容',
        '金': '金（金色）：代表坚强、锐利',
        '水': '水（蓝色）：代表智慧、灵活'
    }

    # 按五行顺序重新组织数据
    ordered_elements = []
    ordered_counts = []
    ordered_colors = []

    for element in element_order:
        if element in element_data['五行统计']:
            ordered_elements.append(element)
            ordered_counts.append(element_data['五行统计'][element])
            ordered_colors.append(element_colors[element])

    # 创建图表 - 使用中文字体解决乱码问题
    plt.rcParams['font.sans-serif'] = ['Arial Unicode MS', 'SimHei']  # 设置中文字体
    plt.rcParams['axes.unicode_minus'] = False  # 解决负号显示问题
    
    fig, ax = plt.subplots(figsize=(12, 7))
    bars = ax.bar(ordered_elements, ordered_counts, color=ordered_colors)

    # 设置标题和标签
    ax.set_title("五行能量分布", fontsize=14, pad=20)
    ax.set_xlabel("五行属性", fontsize=12)
    ax.set_ylabel("出现次数", fontsize=12)

    # 在柱状图上添加数值标签
    for bar in bars:
        height = bar.get_height()
        ax.text(bar.get_x() + bar.get_width() / 2., height,
                f'{int(height)}',
                ha='center', va='bottom')

    # 设置背景色和网格
    ax.set_facecolor('white')
    fig.patch.set_facecolor('white')
    ax.grid(axis='y', linestyle='--', alpha=0.7)

    # 添加图例说明
    legend_elements = [plt.Rectangle((0, 0), 1, 1, facecolor=element_colors[element],
                                     label=element_descriptions[element])
                       for element in ordered_elements]
    ax.legend(handles=legend_elements, loc='upper right',
              bbox_to_anchor=(1.3, 1.0), fontsize=10)

    # 调整布局以适应图例
    plt.tight_layout()

    # 显示图表
    st.pyplot(fig)
    plt.close()
    
    # 添加饼图展示五行比例
    st.subheader("五行比例分布")
    fig2, ax2 = plt.subplots(figsize=(10, 7))
    wedges, texts, autotexts = ax2.pie(
        ordered_counts, 
        labels=ordered_elements,
        autopct='%1.1f%%',
        startangle=90,
        colors=ordered_colors,
        wedgeprops={'edgecolor': 'w', 'linewidth': 1}
    )
    
    # 设置饼图文本样式
    plt.setp(autotexts, size=10, weight="bold")
    plt.setp(texts, size=12)
    
    # 添加标题
    ax2.set_title('五行能量比例', fontsize=14)
    
    # 添加图例
    ax2.legend(
        wedges, 
        [f"{element}: {count}次" for element, count in zip(ordered_elements, ordered_counts)],
        title="五行分布",
        loc="center left",
        bbox_to_anchor=(1, 0, 0.5, 1)
    )
    
    # 调整布局
    plt.tight_layout()
    
    # 显示图表
    st.pyplot(fig2)
    plt.close()

    st.write(f"主导五行: {element_data['主导五行'][0]} (出现{element_data['主导五行'][1]}次)")
    st.subheader("数字性格特征")
    for trait in element_data['数字性格']:
        st.write("- " + trait)
    visualize_special_info(results['特殊信息'])


def main():
    st.title("手机号码算命分析系统")
    st.write("欢迎使用手机号码算命分析系统！请在下方输入您要分析的手机号码。")

    # 使用表单
    with st.form(key='phone_form'):
        phone_number = st.text_input("请输入手机号码（11位）：", "")
        submit_button = st.form_submit_button(label='开始分析')

    if submit_button:
        if not phone_number:
            st.error("请输入手机号码！")
            return

        if not phone_number.isdigit():
            st.error("请只输入数字！")
            return

        if len(phone_number) != 11:
            st.error("请输入11位手机号码！")
            return

        # 执行分析
        results = analyze_phone_number(phone_number)

        # 可视化结果
        visualize_results(results)


if __name__ == "__main__":
    main()

